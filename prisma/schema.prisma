// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String    @unique
  avatarUrl String?
  role      UserRole  @default(USER)
  status    UserStatus @default(ACTIVE)
  strikes   Int       @default(0)
  posts     Post[]
  comments  Comment[]
  reports   Report[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Post {
  id        String    @id @default(uuid())
  title     String
  content   String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  likes     Int       @default(0)
  mediaUrl  String?
  mediaType String?   // "image" or "video"
  mediaHint String?
  reports   Report[]
  status    PostStatus @default(PUBLISHED)
  warningMessage String?
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Report {
  id         String   @id @default(uuid())
  post       Post     @relation(fields: [postId], references: [id])
  postId     String
  reporter   User     @relation(fields: [reporterId], references: [id])
  reporterId String
  reason     String
  createdAt  DateTime @default(now())

  @@unique([postId, reporterId])
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  BLOCKED
}

enum PostStatus {
  PUBLISHED
  WARNED
}
